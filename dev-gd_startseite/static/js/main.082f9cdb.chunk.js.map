{"version":3,"sources":["components/opening/opening.component.jsx","components/galaxy/galaxy.component.jsx","pages/homepage/homepage.component.jsx","App.js","serviceWorker.js","index.js"],"names":["calc","x","y","window","innerWidth","innerHeight","trans1","parseInt","trans2","Opening","useSpring","xy","config","mass","friction","properties","setProperties","className","onMouseMove","clientX","clientY","div","style","transform","interpolate","Galaxy","params","HomePage","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oSAKMA,G,MAAO,SAACC,EAAGC,GAAJ,MAAU,CAACD,EAAIE,OAAOC,WAAa,EAAGF,EAAIC,OAAOE,YAAc,KACtEC,EAAS,SAACL,EAAGC,GAAJ,4BAAyBK,SAASN,EAAI,GAAtC,cAA8CM,SAASL,EAAI,GAA3D,UACTM,EAAS,SAACP,EAAGC,GAAJ,4BAAyBK,SAASN,EAAI,GAAK,GAA3C,cAAmDM,SAAUL,EAAI,GAAK,IAAtE,UAwBAO,EApBC,WAAO,IAAD,EACiBC,aAAU,iBAAM,CACrDC,GAAI,CAAC,EAAG,GACRC,OAAQ,CACPC,KAAM,GAENC,SAAU,QANS,mBACbC,EADa,KACDC,EADC,KAUrB,OACC,yBACCC,UAAU,YACVC,YAAa,gBAAYjB,EAAZ,EAAGkB,QAAqBjB,EAAxB,EAAekB,QAAf,OAAgCJ,EAAc,CAAEL,GAAIX,EAAKC,EAAGC,OACzE,kBAAC,IAASmB,IAAV,CAAcJ,UAAU,QAAQK,MAAO,CAAEC,UAAWR,EAAWJ,GAAGa,YAAYlB,MAC9E,kBAAC,IAASe,IAAV,CAAcJ,UAAU,QAAQK,MAAO,CAAEC,UAAWR,EAAWJ,GAAGa,YAAYhB,Q,gBCuFlEiB,EA9GA,kBACd,kBAAC,IAAD,CACCC,OAAQ,CACP,UAAa,CACZ,OAAU,CACT,MAAS,IACT,QAAW,CACV,QAAU,EACV,WAAc,oBAGhB,MAAS,CACR,MAAS,WAEV,MAAS,CACR,KAAQ,SACR,OAAU,CACT,MAAS,EACT,MAAS,WAEV,QAAW,CACV,SAAY,GAEb,MAAS,CACR,IAAO,iBACP,MAAS,IACT,OAAU,MAGZ,QAAW,CACV,MAAS,GACT,QAAU,EACV,KAAQ,CACP,QAAU,EACV,MAAS,GACT,YAAe,EACf,MAAQ,IAGV,KAAQ,CACP,MAAS,IACT,QAAU,EACV,KAAQ,CACP,QAAU,EACV,MAAS,EACT,SAAY,EACZ,MAAQ,IAGV,YAAe,CACd,QAAU,GAEX,KAAQ,CACP,QAAU,EACV,MAAS,GACT,UAAa,OACb,QAAU,EACV,UAAY,EACZ,SAAY,MACZ,QAAU,EACV,QAAW,CACV,QAAU,EACV,QAAW,IACX,QAAW,QAId,cAAiB,CAChB,UAAa,SACb,OAAU,CACT,QAAW,CACV,QAAU,EACV,KAAQ,UAET,QAAW,CACV,QAAU,EACV,KAAQ,QAET,QAAU,GAEX,MAAS,CACR,KAAQ,CACP,SAAY,IACZ,YAAe,CACd,QAAW,IAGb,OAAU,CACT,SAAY,kBACZ,KAAQ,EACR,SAAY,EACZ,QAAW,EACX,MAAS,GAEV,QAAW,CACV,SAAY,IACZ,SAAY,IAEb,KAAQ,CACP,aAAgB,GAEjB,OAAU,CACT,aAAgB,KAInB,eAAiB,MCzFLC,G,MAfE,WACb,OACI,yBAAKV,UAAU,SACX,kBAAC,EAAD,MAIA,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,oBACf,kBAAC,EAAD,SCEGW,MAVf,WACC,OACA,yBAAKX,UAAU,OAGd,kBAAC,EAAD,QCCkBY,QACW,cAA7B1B,OAAO2B,SAASC,UAEe,UAA7B5B,OAAO2B,SAASC,UAEhB5B,OAAO2B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.082f9cdb.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSpring, animated } from 'react-spring';\nimport './opening.styles.scss';\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2]\nconst trans1 = (x, y) => `translate3d(${parseInt(x / 8)}px,${parseInt(y / 8)}px,0)`\nconst trans2 = (x, y) => `translate3d(${parseInt(x / 25 + 5)}px,${parseInt((y / 10)/ 10)}px,0)`\n// const trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 - 200}px,0)`\n// const trans4 = (x, y) > `translate3d(${x / 3.5}px,${y / 3.5}px,0)`\n\nconst Opening = () => {\n\tconst [ properties, setProperties ] = useSpring(()=> ({\n\t\txy: [0, 0],\n\t\tconfig: {\n\t\t\tmass: 10,\n\t\t\t// tension: 550,\n\t\t\tfriction: 40\n\t\t}\n\t}));\n\n\treturn(\n\t\t<div \n\t\t\tclassName=\"container\"\n\t\t\tonMouseMove={({ clientX: x, clientY: y }) => setProperties({ xy: calc(x, y) })}>\n\t\t\t<animated.div className=\"card1\" style={{ transform: properties.xy.interpolate(trans1) }}/>\n\t\t\t<animated.div className=\"card2\" style={{ transform: properties.xy.interpolate(trans2) }}/>\n\t\t</div>\n\t)\n};\n\nexport default Opening;","import React from 'react';\nimport Particles from 'react-particles-js';\n\nconst Galaxy = () => (\n\t<Particles\n\t\tparams={{\n\t\t\t\"particles\": {\n\t\t\t\t\"number\": {\n\t\t\t\t\t\"value\": 600,\n\t\t\t\t\t\"density\": {\n\t\t\t\t\t\t\"enable\": true,\n\t\t\t\t\t\t\"value_area\": 789.1476416322727\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"color\": {\n\t\t\t\t\t\"value\": \"#ffffff\"\n\t\t\t\t},\n\t\t\t\t\"shape\": {\n\t\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\t\"stroke\": {\n\t\t\t\t\t\t\"width\": 0,\n\t\t\t\t\t\t\"color\": \"#000000\"\n\t\t\t\t\t},\n\t\t\t\t\t\"polygon\": {\n\t\t\t\t\t\t\"nb_sides\": 5\n\t\t\t\t\t},\n\t\t\t\t\t\"image\": {\n\t\t\t\t\t\t\"src\": \"img/github.svg\",\n\t\t\t\t\t\t\"width\": 100,\n\t\t\t\t\t\t\"height\": 100\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"opacity\": {\n\t\t\t\t\t\"value\": 0.5,\n\t\t\t\t\t\"random\": false,\n\t\t\t\t\t\"anim\": {\n\t\t\t\t\t\t\"enable\": true,\n\t\t\t\t\t\t\"speed\": 0.2,\n\t\t\t\t\t\t\"opacity_min\": 0,\n\t\t\t\t\t\t\"sync\": false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"size\": {\n\t\t\t\t\t\"value\": 1.6,\n\t\t\t\t\t\"random\": true,\n\t\t\t\t\t\"anim\": {\n\t\t\t\t\t\t\"enable\": true,\n\t\t\t\t\t\t\"speed\": 3,\n\t\t\t\t\t\t\"size_min\": 0,\n\t\t\t\t\t\t\"sync\": false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"line_linked\": {\n\t\t\t\t\t\"enable\": false,\n\t\t\t\t},\n\t\t\t\t\"move\": {\n\t\t\t\t\t\"enable\": true,\n\t\t\t\t\t\"speed\": .5,\n\t\t\t\t\t\"direction\": \"none\",\n\t\t\t\t\t\"random\": true,\n\t\t\t\t\t\"straight\": false,\n\t\t\t\t\t\"out_mode\": \"out\",\n\t\t\t\t\t\"bounce\": false,\n\t\t\t\t\t\"attract\": {\n\t\t\t\t\t\t\"enable\": false,\n\t\t\t\t\t\t\"rotateX\": 600,\n\t\t\t\t\t\t\"rotateY\": 1200\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"interactivity\": {\n\t\t\t\t\"detect_on\": \"canvas\",\n\t\t\t\t\"events\": {\n\t\t\t\t\t\"onhover\": {\n\t\t\t\t\t\t\"enable\": false,\n\t\t\t\t\t\t\"mode\": \"bubble\"\n\t\t\t\t\t},\n\t\t\t\t\t\"onclick\": {\n\t\t\t\t\t\t\"enable\": false,\n\t\t\t\t\t\t\"mode\": \"push\"\n\t\t\t\t\t},\n\t\t\t\t\t\"resize\": true\n\t\t\t\t},\n\t\t\t\t\"modes\": {\n\t\t\t\t\t\"grab\": {\n\t\t\t\t\t\t\"distance\": 400,\n\t\t\t\t\t\t\"line_linked\": {\n\t\t\t\t\t\t\t\"opacity\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"bubble\": {\n\t\t\t\t\t\t\"distance\": 83.91608391608392,\n\t\t\t\t\t\t\"size\": 1,\n\t\t\t\t\t\t\"duration\": 3,\n\t\t\t\t\t\t\"opacity\": 1,\n\t\t\t\t\t\t\"speed\": 3\n\t\t\t\t\t},\n\t\t\t\t\t\"repulse\": {\n\t\t\t\t\t\t\"distance\": 200,\n\t\t\t\t\t\t\"duration\": 0.4\n\t\t\t\t\t},\n\t\t\t\t\t\"push\": {\n\t\t\t\t\t\t\"particles_nb\": 4\n\t\t\t\t\t},\n\t\t\t\t\t\"remove\": {\n\t\t\t\t\t\t\"particles_nb\": 2\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"retina_detect\": true\n\t\t}} />\n);\n\nexport default Galaxy;","import React from 'react';\nimport Opening from '../../components/opening/opening.component';\nimport Galaxy from '../../components/galaxy/galaxy.component';\nimport './homepage.styles.scss';\n\nconst HomePage = () => {\n    return (\n        <div className=\"scene\">\n            <Galaxy />\n            {/* <div id='stars'></div>\n            <div id='stars2'></div>\n            <div id='stars3'></div> */}\n            <div className=\"scene-background\"/>\n            <div className=\"scene-landscape\"/>\n            <Opening/>\n            {/* <div className=\"scene-lions\"/> */}\n        </div>\n    )\n}\n\nexport default HomePage;","import React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\n// import Opening from './components/opening/opening.component';\n// import ThreeScene from './ThreeScene';\n\nfunction App() {\n\treturn (\n\t<div className=\"App\">\n\t\t{/* <ThreeScene/> */}\n\t\t{/* <Opening/> */}\n\t\t<HomePage/>\n\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}